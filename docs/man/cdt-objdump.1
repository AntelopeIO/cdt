.\" Automatically generated by Pandoc 2.5
.\"
.TH "CDT\-OBJDUMP" "1" "April 18, 2023" "AntelopeIO" "Contract Development Toolkit (CDT)"
.hy
.SH NAME
.PP
cdt\-objdump \- manual page for cdt\-objdump
.SH DESCRIPTION
.PP
cdt\-objdump is a CDT object file dumper
.SH SYNOPSIS
.PP
cdt\-objdump [options] <input object files>
.SH OPTIONS
.PP
Generic Options:
.PP
\f[B]\-\-help\f[R] \- Display available options
(\f[B]\-\-help\-hidden\f[R] for more)
.PP
\f[B]\-\-help\-list\f[R] \- Display list of available options
(\f[B]\-\-help\-list\-hidden\f[R] for more)
.PP
\f[B]\-\-version\f[R] \- Display the version of this program
.PP
cdt\-objdump MachO Specific Options:
.PP
\f[B]\-\-arch=\f[R]<string> \- architecture(s) from a Mach\-O file to
dump
.PP
\f[B]\-\-archive\-member\-offsets\f[R] \- Print the offset to each
archive member for Mach\-O archives (requires \f[B]\-\-macho\f[R] and
\f[B]\-archive\-headers\f[R])
.PP
\f[B]\-\-bind\f[R] \- Display mach\-o binding info
.PP
\f[B]\-\-data\-in\-code\f[R] \- Print the data in code table for Mach\-O
objects (requires \f[B]\-\-macho\f[R])
.PP
\f[B]\-\-dis\-symname=\f[R]<string> \- disassemble just this
symbol\[aq]s instructions (requires \f[B]\-\-macho\f[R])
.PP
\f[B]\-\-dsym=\f[R]<string> \- Use .dSYM file for debug info
.PP
\f[B]\-\-dylib\-id\f[R] \- Print the shared library\[aq]s id for the
dylib Mach\-O file (requires \f[B]\-\-macho\f[R])
.PP
\f[B]\-\-dylibs\-used\f[R] \- Print the shared libraries used for linked
Mach\-O files (requires \f[B]\-\-macho\f[R])
.PP
\f[B]\-\-exports\-trie\f[R] \- Display mach\-o exported symbols
.PP
\f[B]\-\-full\-leading\-addr\f[R] \- Print full leading address
.PP
\f[B]\-g\f[R] \- Print line information from debug info if available
.PP
\f[B]\-\-indirect\-symbols\f[R] \- Print indirect symbol table for
Mach\-O objects (requires \f[B]\-\-macho\f[R])
.PP
\f[B]\-\-info\-plist\f[R] \- Print the info plist section as strings for
Mach\-O objects (requires \f[B]\-\-macho\f[R])
.PP
\f[B]\-\-lazy\-bind\f[R] \- Display mach\-o lazy binding info
.PP
\f[B]\-\-link\-opt\-hints\f[R] \- Print the linker optimization hints
for Mach\-O objects (requires \f[B]\-\-macho\f[R])
.PP
\f[B]\-\-no\-leading\-headers\f[R] \- Print no leading headers
.PP
\f[B]\-\-no\-symbolic\-operands\f[R] \- do not symbolic operands when
disassembling (requires \f[B]\-\-macho\f[R])
.PP
\f[B]\-\-non\-verbose\f[R] \- Print the info for Mach\-O objects in
non\-verbose or numeric form (requires \f[B]\-\-macho\f[R])
.PP
\f[B]\-\-objc\-meta\-data\f[R] \- Print the Objective\-C runtime meta
data for Mach\-O files (requires \f[B]\-\-macho\f[R])
.PP
\f[B]\-\-private\-header\f[R] \- Display only the first format specific
file header
.PP
\f[B]\-\-rebase\f[R] \- Display mach\-o rebasing info
.PP
\f[B]\-\-universal\-headers\f[R] \- Print Mach\-O universal headers
(requires \f[B]\-\-macho\f[R])
.PP
\f[B]\-\-weak\-bind\f[R] \- Display mach\-o weak binding info
.PP
cdt\-objdump Options:
.PP
\f[B]\-C\f[R] \- Alias for \f[B]\-\-demangle\f[R]
.PP
\f[B]\-D\f[R] \- Alias for \f[B]\-\-disassemble\-all\f[R]
.PP
\f[B]\-M\f[R] \- Alias for \f[B]\-\-disassembler\-options\f[R]
.PP
\f[B]\-R\f[R] \- Alias for \f[B]\-\-dynamic\-reloc\f[R]
.PP
\f[B]\-S\f[R] \- Alias for \f[B]\-\-source\f[R]
.PP
\f[B]\-T\f[R] \- Alias for \f[B]\-\-dynamic\-syms\f[R]
.PP
\f[B]\-a\f[R] \- Alias for \f[B]\-\-archive\-headers\f[R]
.PP
\f[B]\-\-adjust\-vma=\f[R]<offset> \- Increase the displayed address by
the specified offset
.PP
\f[B]\-\-all\-headers\f[R] \- Display all available header information
.PP
\f[B]\-\-arch\-name=\f[R]<string> \- Target arch to disassemble for, see
\f[B]\-version\f[R] for available targets
.PP
\f[B]\-\-archive\-headers\f[R] \- Display archive header information
.PP
\f[B]\-d\f[R] \- Alias for \f[B]\-\-disassemble\f[R]
.PP
\f[B]\-\-debug\-vars\f[R] \- Print the locations (in registers or
memory) of source\-level variables alongside disassembly
.PP
\f[B]\-\-debug\-vars=\f[R]<value> \- Print the locations (in registers
or memory) of source\-level variables alongside disassembly
.TP
.B =<empty>
\- unicode
.TP
.B =unicode
\- unicode
.TP
.B =ascii
\- unicode
.PP
\f[B]\-\-debug\-vars\-indent=\f[R]<int> \- Distance to indent the
source\-level variable display, relative to the start of the disassembly
.PP
\f[B]\-\-demangle\f[R] \- Demangle symbols names
.PP
\f[B]\-\-disassemble\f[R] \- Display assembler mnemonics for the machine
instructions
.PP
\f[B]\-\-disassemble\-all\f[R] \- Display assembler mnemonics for the
machine instructions
.PP
\f[B]\-\-disassemble\-symbols=\f[R]<string> \- List of symbols to
disassemble.
Accept demangled names when \f[B]\-\-demangle\f[R] is specified,
otherwise accept mangled names
.PP
\f[B]\-\-disassemble\-zeroes\f[R] \- Do not skip blocks of zeroes when
disassembling
.PP
\f[B]\-\-disassembler\-options=\f[R]<options> \- Pass target specific
disassembler options
.PP
\f[B]\-\-dwarf=\f[R]<value> \- Dump of dwarf debug sections:
.TP
.B =frames
\- .debug_frame
.PP
\f[B]\-\-dynamic\-reloc\f[R] \- Display the dynamic relocation entries
in the file
.PP
\f[B]\-\-dynamic\-syms\f[R] \- Display the contents of the dynamic
symbol table
.PP
\f[B]\-f\f[R] \- Alias for \f[B]\-\-file\-headers\f[R]
.PP
\f[B]\-\-fault\-map\-section\f[R] \- Display contents of faultmap
section
.PP
\f[B]\-\-file\-headers\f[R] \- Display the contents of the overall file
header
.PP
\f[B]\-\-full\-contents\f[R] \- Display the content of each section
.PP
\f[B]\-h\f[R] \- Alias for \f[B]\-\-section\-headers\f[R]
.PP
\f[B]\-\-headers\f[R] \- Alias for \f[B]\-\-section\-headers\f[R]
.PP
\f[B]\-j\f[R] \- Alias for \f[B]\-\-section\f[R]
.PP
\f[B]\-l\f[R] \- Alias for \f[B]\-\-line\-numbers\f[R]
.PP
\f[B]\-\-line\-numbers\f[R] \- Display source line numbers with
disassembly.
Implies disassemble object
.PP
\f[B]\-m\f[R] \- Alias for \f[B]\-\-macho\f[R]
.PP
\f[B]\-\-macho\f[R] \- Use MachO specific object file parser
.PP
\f[B]\-\-mattr=\f[R]<a1,+a2,\-a3,...> \- Target specific attributes
.PP
\f[B]\-\-mcpu=\f[R]<cpu\-name> \- Target a specific cpu type
(\f[B]\-mcpu\f[R]=\f[I]help\f[R] for details)
.PP
\f[B]\-\-no\-leading\-addr\f[R] \- Print no leading address
.PP
\f[B]\-\-no\-show\-raw\-insn\f[R] \- When disassembling instructions, do
not print the instruction bytes.
.PP
\f[B]\-p\f[R] \- Alias for \f[B]\-\-private\-headers\f[R]
.PP
\f[B]\-\-print\-imm\-hex\f[R] \- Use hex format for immediate values
.PP
\f[B]\-\-private\-headers\f[R] \- Display format specific file headers
.PP
\f[B]\-r\f[R] \- Alias for \f[B]\-\-reloc\f[R]
.PP
\f[B]\-\-raw\-clang\-ast\f[R] \- Dump the raw binary contents of the
clang AST section
.PP
\f[B]\-\-reloc\f[R] \- Display the relocation entries in the file
.PP
\f[B]\-s\f[R] \- Alias for \f[B]\-\-full\-contents\f[R]
.PP
\f[B]\-\-section=\f[R]<string> \- Operate on the specified sections
only.
With \f[B]\-\-macho\f[R] dump segment,section
.PP
\f[B]\-\-section\-headers\f[R] \- Display summaries of the headers for
each section.
.PP
\f[B]\-\-show\-lma\f[R] \- Display LMA column when dumping ELF section
headers
.PP
\f[B]\-\-source\f[R] \- Display source inlined with disassembly.
Implies disassemble object
.PP
\f[B]\-\-start\-address=\f[R]<address> \- Disassemble beginning at
address
.PP
\f[B]\-\-stop\-address=\f[R]<address> \- Stop disassembly at address
.PP
\f[B]\-\-symbol\-description\f[R] \- Add symbol description for
disassembly.
This option is for XCOFF files only
.PP
\f[B]\-\-syms\f[R] \- Display the symbol table
.PP
\f[B]\-t\f[R] \- Alias for \f[B]\-\-syms\f[R]
.PP
\f[B]\-\-triple=\f[R]<string> \- Target triple to disassemble for, see
\f[B]\-version\f[R] for available targets
.PP
\f[B]\-u\f[R] \- Alias for \f[B]\-\-unwind\-info\f[R]
.PP
\f[B]\-\-unwind\-info\f[R] \- Display unwind information
.PP
\f[B]\-\-wide\f[R] \- Ignored for compatibility with GNU objdump
.PP
\f[B]\-x\f[R] \- Alias for \f[B]\-\-all\-headers\f[R]
.PP
\f[B]\-z\f[R] \- Alias for \f[B]\-\-disassemble\-zeroes\f[R]
.PP
Pass \[at]FILE as argument to read options from FILE.
.SH BUGS
.PP
Please submit bug reports online at
https://github.com/AntelopeIO/cdt/issues
.SH SEE ALSO
.PP
For more details consult the full documentation and sources
https://github.com/AntelopeIO/cdt
